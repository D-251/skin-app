import openai
import streamlit as st

# ุฅุนุฏุงุฏ ุงููุงุฌูุฉ
st.set_page_config(page_title="ุชุดุฎูุต ุงูุจุดุฑุฉ", layout="centered")
st.title("๐งด ูุณุงุนุฏ ุชุดุฎูุต ูุดุงูู ุงูุจุดุฑุฉ")

# ุฅุนุฏุงุฏ ุนููู OpenAI
openai.api_key = st.secrets["api_key"]
openai.api_base = "https://openrouter.ai/api/v1"

# ูุฏุฎูุงุช ุงููุณุชุฎุฏู
gender = st.selectbox("๐ค ุฃูุช:", ["ุฃูุซู", "ุฐูุฑ"])
age = st.text_input("๐ ุนูุฑู:")
symptoms = st.text_area("๐ฌ ุงูุชุจู ุงูุฃุนุฑุงุถ ุงููู ุญุงุณุฉ ุจููุง ูู ุจุดุฑุชู:")

# ุงูุฒุฑ ุงูุฃูู
if st.button("๐ ุดุฎูุต ุงูุญุงูุฉ"):
    with st.spinner("โณ ุฌุงุฑู ุชุญููู ุงูุญุงูุฉ..."):
        message = f"""
        ุฃูุง {gender}ุ ุนูุฑู {age} ุณูุฉ.
        ุฃุนุงูู ูู ุงูุฃุนุฑุงุถ ุงูุชุงููุฉ: {symptoms}.

        ๐ ุดุฎุต ุงูุญุงูุฉ ูุทุจูุจ ุฃูุฑุงุถ ุฌูุฏูุฉ ูุญุชุฑูุ ููุฏู ุงูุชุงูู:
        1- ุงูุชุดุฎูุต ุงููุจุฏุฆู.
        2- ุงุณู ููุชุฌ ูุญูู (ุงุณู ุชุฌุงุฑู ูุนุฑูู ูู ูุตุฑ) ูุนูุงุฌ ุงูุญุงูุฉ + ุงูุณุนุฑ + ุตูุฑุฉ ุงูููุชุฌ (ุฑุงุจุท ุฅู ุฃููู).
        3- ุงุณู ููุชุฌ ุบุงูู ุฃู ุนุงููู ูุนุฑูู + ุงูุณุนุฑ + ุตูุฑุฉ.
        4- ูู ุงูููุชุฌุงุช ุบูุฑ ูุชููุฑุฉุ ูุฏูู ุจุฏุงุฆู ุญููููุฉ ุจุงูุฃุณูุงุก ุงูุชุฌุงุฑูุฉ.
        """

        response = openai.ChatCompletion.create(
            model="openai/gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "ุฃูุช ุทุจูุจ ุจุดุฑุฉ ูุญุชุฑู ุชุณุงุนุฏ ุงููุณุชุฎุฏู ุนูู ุชุดุฎูุต ุจุดุฑุชู."},
                {"role": "user", "content": message}
            ],
            temperature=0.2
        )

        response_text = response.choices[0].message.content
        st.markdown("### ๐งด ุงูุชุดุฎูุต ูุงูุงูุชุฑุงุญ:")
        st.markdown(response_text)

        # ุตูุฑ ุงูููุชุฌุงุช
        product_images = {
            "ุจุงู ุฃููุณูู": "https://i.imgur.com/LsGx4uc.jpg",
            "ุจูุฒุงู": "https://i.imgur.com/VYx0clM.jpg",
            "ุฏููุฑูู": "https://i.imgur.com/4tz6vPP.jpg",
            "ุฑูุชูู-ุฃ": "https://i.imgur.com/iT3eULe.jpg",
            "ุฃููู ูุฑู": "https://i.imgur.com/9U8Vxjc.jpg",
            "ุฅูุฒูุณ ุชูู ุฏูุฑู": "https://i.imgur.com/dRkgurZ.jpg"
        }

        st.markdown("### ๐ธ ุตูุฑ ุงูููุชุฌุงุช ุงูููุชุฑุญุฉ:")
        for name, url in product_images.items():
            if name.lower() in response_text.lower():
                st.image(url, caption=name, width=150)

# ูุชุงุจุนุฉ ุงูุญุงูุฉ
st.markdown("---")
st.markdown("### ๐ ูู ุงุณุชุฎุฏูุช ุงูุนูุงุฌุ")
follow_up = st.text_area("๐ ุงูุชุจ ุฅุฐุง ุญุตู ุชุญุณู ุฃู ุธูุฑุช ุฃุนุฑุงุถ ุฌุฏูุฏุฉ:")

# ุฒุฑ ุงููุชุงุจุนุฉ
if st.button("๐ค ุฃุฑุณู ูููุชุงุจุนุฉ"):
    with st.spinner("โณ ุฌุงุฑู ุชุนุฏูู ุฎุทุฉ ุงูุนูุงุฌ ุจูุงุกู ุนูู ุงููุชุงุจุนุฉ..."):
        followup_msg = f"""
        ูุฑูุถ ุงุณุชุฎุฏู ุงูุนูุงุฌุ ููุชุจ ุงูุชุงูู:
        "{follow_up}"

        โณ ุนุฏูู ุฎุทุฉ ุงูุนูุงุฌ ุจูุงุกู ุนูู ุฐูู.
        """

        response2 = openai.ChatCompletion.create(
            model="openai/gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "ุฃูุช ุทุจูุจ ุชุชุงุจุน ุงูุญุงูุฉ ุจูุงุกู ุนูู ุงูุชุทูุฑ."},
                {"role": "user", "content": followup_msg}
            ],
            temperature=0.3
        )

        st.markdown("### ๐ ุฎุทุฉ ุงูุนูุงุฌ ุจุนุฏ ุงููุชุงุจุนุฉ:")
        st.markdown(response2.choices[0].message.content)
